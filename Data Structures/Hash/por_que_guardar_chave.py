print("=== POR QUE SEMPRE PRECISAMOS GUARDAR A CHAVE ===\n")

# Exemplo: Vamos supor que temos uma hash table de tamanho 7
# E vamos inserir elementos que causam colis√µes

print("Scenario: Hash table tamanho 7")
print("Elementos a inserir: 12, 19, 26 (todos fazem hash para posi√ß√£o 5)")
print()

print("--- SEPARATE CHAINING ---")
print("Posi√ß√£o 5 ficaria assim:")
print("tabela[5] = [(12, 'Jo√£o'), (19, 'Maria'), (26, 'Pedro')]")
print()
print("Quando buscar por 19:")
print("1. Calcula hash: 19 % 7 = 5")
print("2. Vai na posi√ß√£o 5 e encontra: [(12, 'Jo√£o'), (19, 'Maria'), (26, 'Pedro')]")
print("3. Percorre a lista comparando CHAVES:")
print("   - 12 == 19? N√ÉO")
print("   - 19 == 19? SIM! ‚Üí retorna 'Maria'")
print("4. SEM a chave armazenada, seria IMPOSS√çVEL saber qual elemento buscar!")
print()

print("--- OPEN ADDRESSING (Linear Probing) ---")
print("Tabela ficaria assim:")
print("tabela[5] = 12 ('Jo√£o')")
print("tabela[6] = 19 ('Maria')")  
print("tabela[0] = 26 ('Pedro')")  # Wraparound
print()
print("Quando buscar por 19:")
print("1. Calcula hash: 19 % 7 = 5")
print("2. Verifica posi√ß√£o 5: encontra chave 12")
print("   - 12 == 19? N√ÉO ‚Üí continua procurando")
print("3. Verifica posi√ß√£o 6: encontra chave 19") 
print("   - 19 == 19? SIM! ‚Üí retorna 'Maria'")
print("4. SEM a chave armazenada, seria IMPOSS√çVEL distinguir elementos!")
print()

print("--- E SE N√ÉO GUARD√ÅSSEMOS A CHAVE? ---")
print("‚ùå SEPARATE CHAINING:")
print("   bucket = ['Jo√£o', 'Maria', 'Pedro']")
print("   Como saber qual √© qual? Imposs√≠vel!")
print()
print("‚ùå OPEN ADDRESSING:")
print("   tabela[5] = 'Jo√£o'")
print("   tabela[6] = 'Maria'")
print("   Se buscarmos por 19, como saber se 'Maria' √© o valor de 19 ou de outra chave?")
print("   Seria imposs√≠vel distinguir!")
print()

print("üéØ CONCLUS√ÉO:")
print("A CHAVE √© fundamental em ambos os m√©todos porque:")
print("1. √â a √∫nica forma de IDENTIFICAR qual elemento estamos buscando")
print("2. Permite DISTINGUIR entre elementos que colidiram")
print("3. √â necess√°ria para VERIFICAR se encontramos o elemento correto")
print()
print("Hash table = Estrutura para mapear CHAVES ‚Üí VALORES")
print("Sem a chave, perdemos a capacidade de fazer esse mapeamento!")
